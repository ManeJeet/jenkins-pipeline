pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building the code using Maven'
                echo 'mvn clean package'
            }
        }
        
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit tests with JUnit'
                echo 'mvn test'
                echo 'Running integration tests with Selenium'
                sh 'echo "Tests completed" > test.log'
            }
            post {
                always {
                    archiveArtifacts artifacts: 'test.log', fingerprint: true
                    script {
                        def status = currentBuild.resultIsBetterOrEqualTo('SUCCESS') ? 'SUCCESS' : 'FAILURE'
                        mail to: 'jeetmane3801@gmail.com',
                             subject: "Test Stage Status: ${status}",
                             body: "Dear Client,\n\nThe Test stage has completed with status: ${status}.\nPlease check the Jenkins job for detailed logs."
                    }
                }
            }
        } 
        stage('Code Analysis') {
            steps {
                echo 'Analyzing code with SonarQube'
                echo 'mvn sonar:sonar'
            }
        }
        
        stage('Security Scan') {
            steps {
                echo 'Performing security scan with OWASP Dependency-Check'
                sh 'mvn org.owasp:dependency-check-maven:check'
                sh 'echo "Security scan completed" > security.log'
            }
            post {
                always {
                    archiveArtifacts artifacts: 'security.log', fingerprint: true
                    script {
                        def status = currentBuild.resultIsBetterOrEqualTo('SUCCESS') ? 'SUCCESS' : 'FAILURE'
                        mail to: 'jeetmane3801@gmail.com',
                             subject: "Security Scan Status: ${status}",
                             body: "Dear Client,\n\nThe Security Scan stage has completed with status: ${status}.\nPlease check the Jenkins job for detailed logs."
                    }
                }
            }
        }
        
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to AWS EC2 staging server'
                echo 'ansible-playbook -i inventory/staging deploy.yml'
            }
        }
        
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging environment with Postman/Newman'
                echo 'newman run StagingTests.json'
            }
        }
        
        stage('Deploy to Production') {
            steps {
                echo 'Deploying to AWS EC2 production server'
                echo 'ansible-playbook -i inventory/production deploy.yml'
            }
        }
    }
} 

